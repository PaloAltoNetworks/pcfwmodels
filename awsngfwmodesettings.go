// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package api

import (
	"fmt"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// AWSNGFWModeSettings represents the model of a awsngfwmodesettings
type AWSNGFWModeSettings struct {
	// The firewallgroup ID.
	FirewallGroupID string `json:"firewallGroupID" msgpack:"firewallGroupID" bson:"firewallgroupid" mapstructure:"firewallGroupID,omitempty"`

	// The firewallruleset ID.
	FirewallRulesetID string `json:"firewallRulesetID" msgpack:"firewallRulesetID" bson:"firewallrulesetid" mapstructure:"firewallRulesetID,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewAWSNGFWModeSettings returns a new *AWSNGFWModeSettings
func NewAWSNGFWModeSettings() *AWSNGFWModeSettings {

	return &AWSNGFWModeSettings{
		ModelVersion: 1,
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *AWSNGFWModeSettings) GetBSON() (any, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesAWSNGFWModeSettings{}

	s.FirewallGroupID = o.FirewallGroupID
	s.FirewallRulesetID = o.FirewallRulesetID

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *AWSNGFWModeSettings) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesAWSNGFWModeSettings{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	o.FirewallGroupID = s.FirewallGroupID
	o.FirewallRulesetID = s.FirewallRulesetID

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *AWSNGFWModeSettings) BleveType() string {

	return "awsngfwmodesettings"
}

// DeepCopy returns a deep copy if the AWSNGFWModeSettings.
func (o *AWSNGFWModeSettings) DeepCopy() *AWSNGFWModeSettings {

	if o == nil {
		return nil
	}

	out := &AWSNGFWModeSettings{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *AWSNGFWModeSettings.
func (o *AWSNGFWModeSettings) DeepCopyInto(out *AWSNGFWModeSettings) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy AWSNGFWModeSettings: %s", err))
	}

	*out = *target.(*AWSNGFWModeSettings)
}

// Validate valides the current information stored into the structure.
func (o *AWSNGFWModeSettings) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if err := elemental.ValidateRequiredString("firewallGroupID", o.FirewallGroupID); err != nil {
		requiredErrors = requiredErrors.Append(err)
	}

	if err := elemental.ValidateRequiredString("firewallRulesetID", o.FirewallRulesetID); err != nil {
		requiredErrors = requiredErrors.Append(err)
	}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*AWSNGFWModeSettings) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := AWSNGFWModeSettingsAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return AWSNGFWModeSettingsLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*AWSNGFWModeSettings) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return AWSNGFWModeSettingsAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *AWSNGFWModeSettings) ValueForAttribute(name string) any {

	switch name {
	case "firewallGroupID":
		return o.FirewallGroupID
	case "firewallRulesetID":
		return o.FirewallRulesetID
	}

	return nil
}

// AWSNGFWModeSettingsAttributesMap represents the map of attribute for AWSNGFWModeSettings.
var AWSNGFWModeSettingsAttributesMap = map[string]elemental.AttributeSpecification{
	"FirewallGroupID": {
		AllowedChoices: []string{},
		BSONFieldName:  "firewallgroupid",
		ConvertedName:  "FirewallGroupID",
		Description:    `The firewallgroup ID.`,
		Exposed:        true,
		Name:           "firewallGroupID",
		Required:       true,
		Stored:         true,
		Type:           "string",
	},
	"FirewallRulesetID": {
		AllowedChoices: []string{},
		BSONFieldName:  "firewallrulesetid",
		ConvertedName:  "FirewallRulesetID",
		Description:    `The firewallruleset ID.`,
		Exposed:        true,
		Name:           "firewallRulesetID",
		Required:       true,
		Stored:         true,
		Type:           "string",
	},
}

// AWSNGFWModeSettingsLowerCaseAttributesMap represents the map of attribute for AWSNGFWModeSettings.
var AWSNGFWModeSettingsLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"firewallgroupid": {
		AllowedChoices: []string{},
		BSONFieldName:  "firewallgroupid",
		ConvertedName:  "FirewallGroupID",
		Description:    `The firewallgroup ID.`,
		Exposed:        true,
		Name:           "firewallGroupID",
		Required:       true,
		Stored:         true,
		Type:           "string",
	},
	"firewallrulesetid": {
		AllowedChoices: []string{},
		BSONFieldName:  "firewallrulesetid",
		ConvertedName:  "FirewallRulesetID",
		Description:    `The firewallruleset ID.`,
		Exposed:        true,
		Name:           "firewallRulesetID",
		Required:       true,
		Stored:         true,
		Type:           "string",
	},
}

type mongoAttributesAWSNGFWModeSettings struct {
	FirewallGroupID   string `bson:"firewallgroupid"`
	FirewallRulesetID string `bson:"firewallrulesetid"`
}
