// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package api

import (
	"fmt"
	"time"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// LogIncident represents the model of a logincident
type LogIncident struct {
	// Other IP addresses for the attacker instance.
	AttackerAlternateIPs []string `json:"attackerAlternateIPs" msgpack:"attackerAlternateIPs" bson:"-" mapstructure:"attackerAlternateIPs,omitempty"`

	// The attacker ID (EC2 instance ID).
	AttackerID string `json:"attackerID" msgpack:"attackerID" bson:"-" mapstructure:"attackerID,omitempty"`

	// The attacker IP address.
	AttackerIP string `json:"attackerIP" msgpack:"attackerIP" bson:"-" mapstructure:"attackerIP,omitempty"`

	// The attacker name.
	AttackerName string `json:"attackerName" msgpack:"attackerName" bson:"-" mapstructure:"attackerName,omitempty"`

	// The attacker port.
	AttackerPort int `json:"attackerPort" msgpack:"attackerPort" bson:"-" mapstructure:"attackerPort,omitempty"`

	// The NGFW name.
	FirewallName string `json:"firewallName" msgpack:"firewallName" bson:"-" mapstructure:"firewallName,omitempty"`

	// The threat category.
	ThreatCategory string `json:"threatCategory" msgpack:"threatCategory" bson:"-" mapstructure:"threatCategory,omitempty"`

	// The threat name.
	ThreatName string `json:"threatName" msgpack:"threatName" bson:"-" mapstructure:"threatName,omitempty"`

	// The timestamp of the incident.
	Timestamp time.Time `json:"timestamp" msgpack:"timestamp" bson:"-" mapstructure:"timestamp,omitempty"`

	// Other IP addresses for the victim instance.
	VictimAlternateIPs []string `json:"victimAlternateIPs" msgpack:"victimAlternateIPs" bson:"-" mapstructure:"victimAlternateIPs,omitempty"`

	// The victim ID (EC2 instance ID).
	VictimID string `json:"victimID" msgpack:"victimID" bson:"-" mapstructure:"victimID,omitempty"`

	// The victim IP address.
	VictimIP string `json:"victimIP" msgpack:"victimIP" bson:"-" mapstructure:"victimIP,omitempty"`

	// The victim name.
	VictimName string `json:"victimName" msgpack:"victimName" bson:"-" mapstructure:"victimName,omitempty"`

	// The victim port.
	VictimPort int `json:"victimPort" msgpack:"victimPort" bson:"-" mapstructure:"victimPort,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewLogIncident returns a new *LogIncident
func NewLogIncident() *LogIncident {

	return &LogIncident{
		ModelVersion:         1,
		AttackerAlternateIPs: []string{},
		VictimAlternateIPs:   []string{},
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *LogIncident) GetBSON() (any, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesLogIncident{}

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *LogIncident) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesLogIncident{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *LogIncident) BleveType() string {

	return "logincident"
}

// DeepCopy returns a deep copy if the LogIncident.
func (o *LogIncident) DeepCopy() *LogIncident {

	if o == nil {
		return nil
	}

	out := &LogIncident{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *LogIncident.
func (o *LogIncident) DeepCopyInto(out *LogIncident) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy LogIncident: %s", err))
	}

	*out = *target.(*LogIncident)
}

// Validate valides the current information stored into the structure.
func (o *LogIncident) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if err := elemental.ValidateRequiredTime("timestamp", o.Timestamp); err != nil {
		requiredErrors = requiredErrors.Append(err)
	}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*LogIncident) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := LogIncidentAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return LogIncidentLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*LogIncident) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return LogIncidentAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *LogIncident) ValueForAttribute(name string) any {

	switch name {
	case "attackerAlternateIPs":
		return o.AttackerAlternateIPs
	case "attackerID":
		return o.AttackerID
	case "attackerIP":
		return o.AttackerIP
	case "attackerName":
		return o.AttackerName
	case "attackerPort":
		return o.AttackerPort
	case "firewallName":
		return o.FirewallName
	case "threatCategory":
		return o.ThreatCategory
	case "threatName":
		return o.ThreatName
	case "timestamp":
		return o.Timestamp
	case "victimAlternateIPs":
		return o.VictimAlternateIPs
	case "victimID":
		return o.VictimID
	case "victimIP":
		return o.VictimIP
	case "victimName":
		return o.VictimName
	case "victimPort":
		return o.VictimPort
	}

	return nil
}

// LogIncidentAttributesMap represents the map of attribute for LogIncident.
var LogIncidentAttributesMap = map[string]elemental.AttributeSpecification{
	"AttackerAlternateIPs": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerAlternateIPs",
		Description:    `Other IP addresses for the attacker instance.`,
		Exposed:        true,
		Name:           "attackerAlternateIPs",
		SubType:        "string",
		Type:           "list",
	},
	"AttackerID": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerID",
		Description:    `The attacker ID (EC2 instance ID).`,
		Exposed:        true,
		Name:           "attackerID",
		Type:           "string",
	},
	"AttackerIP": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerIP",
		Description:    `The attacker IP address.`,
		Exposed:        true,
		Name:           "attackerIP",
		Type:           "string",
	},
	"AttackerName": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerName",
		Description:    `The attacker name.`,
		Exposed:        true,
		Name:           "attackerName",
		Type:           "string",
	},
	"AttackerPort": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerPort",
		Description:    `The attacker port.`,
		Exposed:        true,
		Name:           "attackerPort",
		Type:           "integer",
	},
	"FirewallName": {
		AllowedChoices: []string{},
		ConvertedName:  "FirewallName",
		Description:    `The NGFW name.`,
		Exposed:        true,
		Name:           "firewallName",
		Type:           "string",
	},
	"ThreatCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatCategory",
		Description:    `The threat category.`,
		Exposed:        true,
		Name:           "threatCategory",
		Type:           "string",
	},
	"ThreatName": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatName",
		Description:    `The threat name.`,
		Exposed:        true,
		Name:           "threatName",
		Type:           "string",
	},
	"Timestamp": {
		AllowedChoices: []string{},
		ConvertedName:  "Timestamp",
		Description:    `The timestamp of the incident.`,
		Exposed:        true,
		Name:           "timestamp",
		Required:       true,
		Type:           "time",
	},
	"VictimAlternateIPs": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimAlternateIPs",
		Description:    `Other IP addresses for the victim instance.`,
		Exposed:        true,
		Name:           "victimAlternateIPs",
		SubType:        "string",
		Type:           "list",
	},
	"VictimID": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimID",
		Description:    `The victim ID (EC2 instance ID).`,
		Exposed:        true,
		Name:           "victimID",
		Type:           "string",
	},
	"VictimIP": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimIP",
		Description:    `The victim IP address.`,
		Exposed:        true,
		Name:           "victimIP",
		Type:           "string",
	},
	"VictimName": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimName",
		Description:    `The victim name.`,
		Exposed:        true,
		Name:           "victimName",
		Type:           "string",
	},
	"VictimPort": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimPort",
		Description:    `The victim port.`,
		Exposed:        true,
		Name:           "victimPort",
		Type:           "integer",
	},
}

// LogIncidentLowerCaseAttributesMap represents the map of attribute for LogIncident.
var LogIncidentLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"attackeralternateips": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerAlternateIPs",
		Description:    `Other IP addresses for the attacker instance.`,
		Exposed:        true,
		Name:           "attackerAlternateIPs",
		SubType:        "string",
		Type:           "list",
	},
	"attackerid": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerID",
		Description:    `The attacker ID (EC2 instance ID).`,
		Exposed:        true,
		Name:           "attackerID",
		Type:           "string",
	},
	"attackerip": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerIP",
		Description:    `The attacker IP address.`,
		Exposed:        true,
		Name:           "attackerIP",
		Type:           "string",
	},
	"attackername": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerName",
		Description:    `The attacker name.`,
		Exposed:        true,
		Name:           "attackerName",
		Type:           "string",
	},
	"attackerport": {
		AllowedChoices: []string{},
		ConvertedName:  "AttackerPort",
		Description:    `The attacker port.`,
		Exposed:        true,
		Name:           "attackerPort",
		Type:           "integer",
	},
	"firewallname": {
		AllowedChoices: []string{},
		ConvertedName:  "FirewallName",
		Description:    `The NGFW name.`,
		Exposed:        true,
		Name:           "firewallName",
		Type:           "string",
	},
	"threatcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatCategory",
		Description:    `The threat category.`,
		Exposed:        true,
		Name:           "threatCategory",
		Type:           "string",
	},
	"threatname": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatName",
		Description:    `The threat name.`,
		Exposed:        true,
		Name:           "threatName",
		Type:           "string",
	},
	"timestamp": {
		AllowedChoices: []string{},
		ConvertedName:  "Timestamp",
		Description:    `The timestamp of the incident.`,
		Exposed:        true,
		Name:           "timestamp",
		Required:       true,
		Type:           "time",
	},
	"victimalternateips": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimAlternateIPs",
		Description:    `Other IP addresses for the victim instance.`,
		Exposed:        true,
		Name:           "victimAlternateIPs",
		SubType:        "string",
		Type:           "list",
	},
	"victimid": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimID",
		Description:    `The victim ID (EC2 instance ID).`,
		Exposed:        true,
		Name:           "victimID",
		Type:           "string",
	},
	"victimip": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimIP",
		Description:    `The victim IP address.`,
		Exposed:        true,
		Name:           "victimIP",
		Type:           "string",
	},
	"victimname": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimName",
		Description:    `The victim name.`,
		Exposed:        true,
		Name:           "victimName",
		Type:           "string",
	},
	"victimport": {
		AllowedChoices: []string{},
		ConvertedName:  "VictimPort",
		Description:    `The victim port.`,
		Exposed:        true,
		Name:           "victimPort",
		Type:           "integer",
	},
}

type mongoAttributesLogIncident struct {
}
