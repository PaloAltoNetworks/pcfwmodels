// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package api

import (
	"fmt"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// FirewallURLCategoryCriteria represents the model of a firewallurlcategorycriteria
type FirewallURLCategoryCriteria struct {
	// NGFW URL categories.  See FirewallURLCategoryList for the list.
	URLCategories []string `json:"URLCategories" msgpack:"URLCategories" bson:"urlcategories" mapstructure:"URLCategories,omitempty"`

	// List FirewallCustomExternalFeed IDs that are of type URLList.
	CustomExternalFeedIDs []string `json:"customExternalFeedIDs" msgpack:"customExternalFeedIDs" bson:"customexternalfeedids" mapstructure:"customExternalFeedIDs,omitempty"`

	// List of FirewallCustomURLCategory IDs.
	CustomURLCategoryIDs []string `json:"customURLCategoryIDs" msgpack:"customURLCategoryIDs" bson:"customurlcategoryids" mapstructure:"customURLCategoryIDs,omitempty"`

	// List of URL intelligence feeds.
	ExternalFeedIDs []string `json:"externalFeedIDs" msgpack:"externalFeedIDs" bson:"externalfeedids" mapstructure:"externalFeedIDs,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewFirewallURLCategoryCriteria returns a new *FirewallURLCategoryCriteria
func NewFirewallURLCategoryCriteria() *FirewallURLCategoryCriteria {

	return &FirewallURLCategoryCriteria{
		ModelVersion:          1,
		URLCategories:         []string{},
		CustomExternalFeedIDs: []string{},
		CustomURLCategoryIDs:  []string{},
		ExternalFeedIDs:       []string{},
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallURLCategoryCriteria) GetBSON() (any, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesFirewallURLCategoryCriteria{}

	s.URLCategories = o.URLCategories
	s.CustomExternalFeedIDs = o.CustomExternalFeedIDs
	s.CustomURLCategoryIDs = o.CustomURLCategoryIDs
	s.ExternalFeedIDs = o.ExternalFeedIDs

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallURLCategoryCriteria) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesFirewallURLCategoryCriteria{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	o.URLCategories = s.URLCategories
	o.CustomExternalFeedIDs = s.CustomExternalFeedIDs
	o.CustomURLCategoryIDs = s.CustomURLCategoryIDs
	o.ExternalFeedIDs = s.ExternalFeedIDs

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *FirewallURLCategoryCriteria) BleveType() string {

	return "firewallurlcategorycriteria"
}

// DeepCopy returns a deep copy if the FirewallURLCategoryCriteria.
func (o *FirewallURLCategoryCriteria) DeepCopy() *FirewallURLCategoryCriteria {

	if o == nil {
		return nil
	}

	out := &FirewallURLCategoryCriteria{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *FirewallURLCategoryCriteria.
func (o *FirewallURLCategoryCriteria) DeepCopyInto(out *FirewallURLCategoryCriteria) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy FirewallURLCategoryCriteria: %s", err))
	}

	*out = *target.(*FirewallURLCategoryCriteria)
}

// Validate valides the current information stored into the structure.
func (o *FirewallURLCategoryCriteria) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*FirewallURLCategoryCriteria) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := FirewallURLCategoryCriteriaAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return FirewallURLCategoryCriteriaLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*FirewallURLCategoryCriteria) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return FirewallURLCategoryCriteriaAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *FirewallURLCategoryCriteria) ValueForAttribute(name string) any {

	switch name {
	case "URLCategories":
		return o.URLCategories
	case "customExternalFeedIDs":
		return o.CustomExternalFeedIDs
	case "customURLCategoryIDs":
		return o.CustomURLCategoryIDs
	case "externalFeedIDs":
		return o.ExternalFeedIDs
	}

	return nil
}

// FirewallURLCategoryCriteriaAttributesMap represents the map of attribute for FirewallURLCategoryCriteria.
var FirewallURLCategoryCriteriaAttributesMap = map[string]elemental.AttributeSpecification{
	"URLCategories": {
		AllowedChoices: []string{},
		BSONFieldName:  "urlcategories",
		ConvertedName:  "URLCategories",
		Description:    `NGFW URL categories.  See FirewallURLCategoryList for the list.`,
		Exposed:        true,
		Name:           "URLCategories",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
	"CustomExternalFeedIDs": {
		AllowedChoices: []string{},
		BSONFieldName:  "customexternalfeedids",
		ConvertedName:  "CustomExternalFeedIDs",
		Description:    `List FirewallCustomExternalFeed IDs that are of type URLList.`,
		Exposed:        true,
		Name:           "customExternalFeedIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
	"CustomURLCategoryIDs": {
		AllowedChoices: []string{},
		BSONFieldName:  "customurlcategoryids",
		ConvertedName:  "CustomURLCategoryIDs",
		Description:    `List of FirewallCustomURLCategory IDs.`,
		Exposed:        true,
		Name:           "customURLCategoryIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
	"ExternalFeedIDs": {
		AllowedChoices: []string{},
		BSONFieldName:  "externalfeedids",
		ConvertedName:  "ExternalFeedIDs",
		Description:    `List of URL intelligence feeds.`,
		Exposed:        true,
		Name:           "externalFeedIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
}

// FirewallURLCategoryCriteriaLowerCaseAttributesMap represents the map of attribute for FirewallURLCategoryCriteria.
var FirewallURLCategoryCriteriaLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"urlcategories": {
		AllowedChoices: []string{},
		BSONFieldName:  "urlcategories",
		ConvertedName:  "URLCategories",
		Description:    `NGFW URL categories.  See FirewallURLCategoryList for the list.`,
		Exposed:        true,
		Name:           "URLCategories",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
	"customexternalfeedids": {
		AllowedChoices: []string{},
		BSONFieldName:  "customexternalfeedids",
		ConvertedName:  "CustomExternalFeedIDs",
		Description:    `List FirewallCustomExternalFeed IDs that are of type URLList.`,
		Exposed:        true,
		Name:           "customExternalFeedIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
	"customurlcategoryids": {
		AllowedChoices: []string{},
		BSONFieldName:  "customurlcategoryids",
		ConvertedName:  "CustomURLCategoryIDs",
		Description:    `List of FirewallCustomURLCategory IDs.`,
		Exposed:        true,
		Name:           "customURLCategoryIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
	"externalfeedids": {
		AllowedChoices: []string{},
		BSONFieldName:  "externalfeedids",
		ConvertedName:  "ExternalFeedIDs",
		Description:    `List of URL intelligence feeds.`,
		Exposed:        true,
		Name:           "externalFeedIDs",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
}

type mongoAttributesFirewallURLCategoryCriteria struct {
	URLCategories         []string `bson:"urlcategories"`
	CustomExternalFeedIDs []string `bson:"customexternalfeedids"`
	CustomURLCategoryIDs  []string `bson:"customurlcategoryids"`
	ExternalFeedIDs       []string `bson:"externalfeedids"`
}
