// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package api

import (
	"fmt"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// FirewallAutoIncludeProfile represents the model of a firewallautoincludeprofile
type FirewallAutoIncludeProfile struct {
	// An AWS VPC ID.
	VPC string `json:"VPC" msgpack:"VPC" bson:"vpc" mapstructure:"VPC,omitempty"`

	// A tag list.
	Tags []string `json:"tags" msgpack:"tags" bson:"tags" mapstructure:"tags,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewFirewallAutoIncludeProfile returns a new *FirewallAutoIncludeProfile
func NewFirewallAutoIncludeProfile() *FirewallAutoIncludeProfile {

	return &FirewallAutoIncludeProfile{
		ModelVersion: 1,
		Tags:         []string{},
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallAutoIncludeProfile) GetBSON() (interface{}, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesFirewallAutoIncludeProfile{}

	s.VPC = o.VPC
	s.Tags = o.Tags

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallAutoIncludeProfile) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesFirewallAutoIncludeProfile{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	o.VPC = s.VPC
	o.Tags = s.Tags

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *FirewallAutoIncludeProfile) BleveType() string {

	return "firewallautoincludeprofile"
}

// DeepCopy returns a deep copy if the FirewallAutoIncludeProfile.
func (o *FirewallAutoIncludeProfile) DeepCopy() *FirewallAutoIncludeProfile {

	if o == nil {
		return nil
	}

	out := &FirewallAutoIncludeProfile{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *FirewallAutoIncludeProfile.
func (o *FirewallAutoIncludeProfile) DeepCopyInto(out *FirewallAutoIncludeProfile) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy FirewallAutoIncludeProfile: %s", err))
	}

	*out = *target.(*FirewallAutoIncludeProfile)
}

// Validate valides the current information stored into the structure.
func (o *FirewallAutoIncludeProfile) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if err := ValidateTagsWithoutReservedPrefixes("tags", o.Tags); err != nil {
		errors = errors.Append(err)
	}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*FirewallAutoIncludeProfile) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := FirewallAutoIncludeProfileAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return FirewallAutoIncludeProfileLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*FirewallAutoIncludeProfile) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return FirewallAutoIncludeProfileAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *FirewallAutoIncludeProfile) ValueForAttribute(name string) interface{} {

	switch name {
	case "VPC":
		return o.VPC
	case "tags":
		return o.Tags
	}

	return nil
}

// FirewallAutoIncludeProfileAttributesMap represents the map of attribute for FirewallAutoIncludeProfile.
var FirewallAutoIncludeProfileAttributesMap = map[string]elemental.AttributeSpecification{
	"VPC": {
		AllowedChoices: []string{},
		BSONFieldName:  "vpc",
		ConvertedName:  "VPC",
		Description:    `An AWS VPC ID.`,
		Exposed:        true,
		Name:           "VPC",
		Stored:         true,
		Type:           "string",
	},
	"Tags": {
		AllowedChoices: []string{},
		BSONFieldName:  "tags",
		ConvertedName:  "Tags",
		Description:    `A tag list.`,
		Exposed:        true,
		Name:           "tags",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
}

// FirewallAutoIncludeProfileLowerCaseAttributesMap represents the map of attribute for FirewallAutoIncludeProfile.
var FirewallAutoIncludeProfileLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"vpc": {
		AllowedChoices: []string{},
		BSONFieldName:  "vpc",
		ConvertedName:  "VPC",
		Description:    `An AWS VPC ID.`,
		Exposed:        true,
		Name:           "VPC",
		Stored:         true,
		Type:           "string",
	},
	"tags": {
		AllowedChoices: []string{},
		BSONFieldName:  "tags",
		ConvertedName:  "Tags",
		Description:    `A tag list.`,
		Exposed:        true,
		Name:           "tags",
		Stored:         true,
		SubType:        "string",
		Type:           "list",
	},
}

type mongoAttributesFirewallAutoIncludeProfile struct {
	VPC  string   `bson:"vpc"`
	Tags []string `bson:"tags"`
}
