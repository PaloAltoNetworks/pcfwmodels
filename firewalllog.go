// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package api

import (
	"fmt"
	"time"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// FirewallLogTypeValue represents the possible values for attribute "type".
type FirewallLogTypeValue string

const (
	// FirewallLogTypeThreat represents the value Threat.
	FirewallLogTypeThreat FirewallLogTypeValue = "Threat"

	// FirewallLogTypeTraffic represents the value Traffic.
	FirewallLogTypeTraffic FirewallLogTypeValue = "Traffic"

	// FirewallLogTypeURLFiltering represents the value URLFiltering.
	FirewallLogTypeURLFiltering FirewallLogTypeValue = "URLFiltering"
)

// FirewallLog represents the model of a firewalllog
type FirewallLog struct {
	// AWS account id that generated the log.
	AccountID string `json:"accountID" msgpack:"accountID" bson:"-" mapstructure:"accountID,omitempty"`

	// Action the NGFW took.
	Action string `json:"action" msgpack:"action" bson:"-" mapstructure:"action,omitempty"`

	// Application.
	App string `json:"app" msgpack:"app" bson:"-" mapstructure:"app,omitempty"`

	// Destination ip.
	DestinationIP string `json:"destinationIP" msgpack:"destinationIP" bson:"-" mapstructure:"destinationIP,omitempty"`

	// Destination port.
	DestinationPort int `json:"destinationPort" msgpack:"destinationPort" bson:"-" mapstructure:"destinationPort,omitempty"`

	// Name of firewall that generated the log.
	FirewallName string `json:"firewallName" msgpack:"firewallName" bson:"-" mapstructure:"firewallName,omitempty"`

	// Network protocol.
	Protocol string `json:"protocol" msgpack:"protocol" bson:"-" mapstructure:"protocol,omitempty"`

	// AWS region that generated the log.
	Region string `json:"region" msgpack:"region" bson:"-" mapstructure:"region,omitempty"`

	// Repeat count.
	RepeatCount int `json:"repeatCount" msgpack:"repeatCount" bson:"-" mapstructure:"repeatCount,omitempty"`

	// NGFW rule.
	Rule string `json:"rule" msgpack:"rule" bson:"-" mapstructure:"rule,omitempty"`

	// Session id.
	SessionID string `json:"sessionID" msgpack:"sessionID" bson:"-" mapstructure:"sessionID,omitempty"`

	// Source ip.
	SourceIP string `json:"sourceIP" msgpack:"sourceIP" bson:"-" mapstructure:"sourceIP,omitempty"`

	// Source port.
	SourcePort int `json:"sourcePort" msgpack:"sourcePort" bson:"-" mapstructure:"sourcePort,omitempty"`

	// Threat category.
	ThreatCategory string `json:"threatCategory" msgpack:"threatCategory" bson:"-" mapstructure:"threatCategory,omitempty"`

	// Threat content name.
	ThreatContentName string `json:"threatContentName" msgpack:"threatContentName" bson:"-" mapstructure:"threatContentName,omitempty"`

	// Contentver.
	ThreatContentver string `json:"threatContentver" msgpack:"threatContentver" bson:"-" mapstructure:"threatContentver,omitempty"`

	// Data filter reason.
	ThreatDataFilterReason string `json:"threatDataFilterReason" msgpack:"threatDataFilterReason" bson:"-" mapstructure:"threatDataFilterReason,omitempty"`

	// Traffic direction.
	ThreatDirection string `json:"threatDirection" msgpack:"threatDirection" bson:"-" mapstructure:"threatDirection,omitempty"`

	// Filetype.
	ThreatFileType string `json:"threatFileType" msgpack:"threatFileType" bson:"-" mapstructure:"threatFileType,omitempty"`

	// Severity.
	ThreatSeverity string `json:"threatSeverity" msgpack:"threatSeverity" bson:"-" mapstructure:"threatSeverity,omitempty"`

	// Sub type.
	ThreatSubType string `json:"threatSubType" msgpack:"threatSubType" bson:"-" mapstructure:"threatSubType,omitempty"`

	// Time generated.
	TimeGenerated time.Time `json:"timeGenerated" msgpack:"timeGenerated" bson:"-" mapstructure:"timeGenerated,omitempty"`

	// Bytes received.
	TrafficBytesReceived string `json:"trafficBytesReceived" msgpack:"trafficBytesReceived" bson:"-" mapstructure:"trafficBytesReceived,omitempty"`

	// Bytes sent.
	TrafficBytesSent string `json:"trafficBytesSent" msgpack:"trafficBytesSent" bson:"-" mapstructure:"trafficBytesSent,omitempty"`

	// Category.
	TrafficCategory string `json:"trafficCategory" msgpack:"trafficCategory" bson:"-" mapstructure:"trafficCategory,omitempty"`

	// Traffic destination country.
	TrafficDestinationCountry string `json:"trafficDestinationCountry" msgpack:"trafficDestinationCountry" bson:"-" mapstructure:"trafficDestinationCountry,omitempty"`

	// Elapsed time.
	TrafficElapsedTime int `json:"trafficElapsedTime" msgpack:"trafficElapsedTime" bson:"-" mapstructure:"trafficElapsedTime,omitempty"`

	// Bytes received.
	TrafficPacketsReceived string `json:"trafficPacketsReceived" msgpack:"trafficPacketsReceived" bson:"-" mapstructure:"trafficPacketsReceived,omitempty"`

	// Bytes received.
	TrafficPacketsSent string `json:"trafficPacketsSent" msgpack:"trafficPacketsSent" bson:"-" mapstructure:"trafficPacketsSent,omitempty"`

	// Session end reason.
	TrafficSessionEndReason string `json:"trafficSessionEndReason" msgpack:"trafficSessionEndReason" bson:"-" mapstructure:"trafficSessionEndReason,omitempty"`

	// Traffic source country.
	TrafficSourceCountry string `json:"trafficSourceCountry" msgpack:"trafficSourceCountry" bson:"-" mapstructure:"trafficSourceCountry,omitempty"`

	// Start time.
	TrafficStartTime time.Time `json:"trafficStartTime" msgpack:"trafficStartTime" bson:"-" mapstructure:"trafficStartTime,omitempty"`

	// Type of the log.
	Type FirewallLogTypeValue `json:"type" msgpack:"type" bson:"-" mapstructure:"type,omitempty"`

	// Url filtering Category.
	UrlFilteringCategory string `json:"urlFilteringCategory" msgpack:"urlFilteringCategory" bson:"-" mapstructure:"urlFilteringCategory,omitempty"`

	// Start time.
	UrlFilteringStartTime time.Time `json:"urlFilteringStartTime" msgpack:"urlFilteringStartTime" bson:"-" mapstructure:"urlFilteringStartTime,omitempty"`

	// Xff ip.
	XffIP string `json:"xffIP" msgpack:"xffIP" bson:"-" mapstructure:"xffIP,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewFirewallLog returns a new *FirewallLog
func NewFirewallLog() *FirewallLog {

	return &FirewallLog{
		ModelVersion: 1,
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallLog) GetBSON() (any, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesFirewallLog{}

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallLog) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesFirewallLog{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *FirewallLog) BleveType() string {

	return "firewalllog"
}

// DeepCopy returns a deep copy if the FirewallLog.
func (o *FirewallLog) DeepCopy() *FirewallLog {

	if o == nil {
		return nil
	}

	out := &FirewallLog{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *FirewallLog.
func (o *FirewallLog) DeepCopyInto(out *FirewallLog) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy FirewallLog: %s", err))
	}

	*out = *target.(*FirewallLog)
}

// Validate valides the current information stored into the structure.
func (o *FirewallLog) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if err := elemental.ValidateStringInList("type", string(o.Type), []string{"Traffic", "Threat", "URLFiltering"}, false); err != nil {
		errors = errors.Append(err)
	}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*FirewallLog) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := FirewallLogAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return FirewallLogLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*FirewallLog) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return FirewallLogAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *FirewallLog) ValueForAttribute(name string) any {

	switch name {
	case "accountID":
		return o.AccountID
	case "action":
		return o.Action
	case "app":
		return o.App
	case "destinationIP":
		return o.DestinationIP
	case "destinationPort":
		return o.DestinationPort
	case "firewallName":
		return o.FirewallName
	case "protocol":
		return o.Protocol
	case "region":
		return o.Region
	case "repeatCount":
		return o.RepeatCount
	case "rule":
		return o.Rule
	case "sessionID":
		return o.SessionID
	case "sourceIP":
		return o.SourceIP
	case "sourcePort":
		return o.SourcePort
	case "threatCategory":
		return o.ThreatCategory
	case "threatContentName":
		return o.ThreatContentName
	case "threatContentver":
		return o.ThreatContentver
	case "threatDataFilterReason":
		return o.ThreatDataFilterReason
	case "threatDirection":
		return o.ThreatDirection
	case "threatFileType":
		return o.ThreatFileType
	case "threatSeverity":
		return o.ThreatSeverity
	case "threatSubType":
		return o.ThreatSubType
	case "timeGenerated":
		return o.TimeGenerated
	case "trafficBytesReceived":
		return o.TrafficBytesReceived
	case "trafficBytesSent":
		return o.TrafficBytesSent
	case "trafficCategory":
		return o.TrafficCategory
	case "trafficDestinationCountry":
		return o.TrafficDestinationCountry
	case "trafficElapsedTime":
		return o.TrafficElapsedTime
	case "trafficPacketsReceived":
		return o.TrafficPacketsReceived
	case "trafficPacketsSent":
		return o.TrafficPacketsSent
	case "trafficSessionEndReason":
		return o.TrafficSessionEndReason
	case "trafficSourceCountry":
		return o.TrafficSourceCountry
	case "trafficStartTime":
		return o.TrafficStartTime
	case "type":
		return o.Type
	case "urlFilteringCategory":
		return o.UrlFilteringCategory
	case "urlFilteringStartTime":
		return o.UrlFilteringStartTime
	case "xffIP":
		return o.XffIP
	}

	return nil
}

// FirewallLogAttributesMap represents the map of attribute for FirewallLog.
var FirewallLogAttributesMap = map[string]elemental.AttributeSpecification{
	"AccountID": {
		AllowedChoices: []string{},
		ConvertedName:  "AccountID",
		Description:    `AWS account id that generated the log.`,
		Exposed:        true,
		Name:           "accountID",
		Type:           "string",
	},
	"Action": {
		AllowedChoices: []string{},
		ConvertedName:  "Action",
		Description:    `Action the NGFW took.`,
		Exposed:        true,
		Name:           "action",
		Type:           "string",
	},
	"App": {
		AllowedChoices: []string{},
		ConvertedName:  "App",
		Description:    `Application.`,
		Exposed:        true,
		Name:           "app",
		Type:           "string",
	},
	"DestinationIP": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationIP",
		Description:    `Destination ip.`,
		Exposed:        true,
		Name:           "destinationIP",
		Type:           "string",
	},
	"DestinationPort": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationPort",
		Description:    `Destination port.`,
		Exposed:        true,
		Name:           "destinationPort",
		Type:           "integer",
	},
	"FirewallName": {
		AllowedChoices: []string{},
		ConvertedName:  "FirewallName",
		Description:    `Name of firewall that generated the log.`,
		Exposed:        true,
		Name:           "firewallName",
		Type:           "string",
	},
	"Protocol": {
		AllowedChoices: []string{},
		ConvertedName:  "Protocol",
		Description:    `Network protocol.`,
		Exposed:        true,
		Name:           "protocol",
		Type:           "string",
	},
	"Region": {
		AllowedChoices: []string{},
		ConvertedName:  "Region",
		Description:    `AWS region that generated the log.`,
		Exposed:        true,
		Name:           "region",
		Type:           "string",
	},
	"RepeatCount": {
		AllowedChoices: []string{},
		ConvertedName:  "RepeatCount",
		Description:    `Repeat count.`,
		Exposed:        true,
		Name:           "repeatCount",
		Type:           "integer",
	},
	"Rule": {
		AllowedChoices: []string{},
		ConvertedName:  "Rule",
		Description:    `NGFW rule.`,
		Exposed:        true,
		Name:           "rule",
		Type:           "string",
	},
	"SessionID": {
		AllowedChoices: []string{},
		ConvertedName:  "SessionID",
		Description:    `Session id.`,
		Exposed:        true,
		Name:           "sessionID",
		Type:           "string",
	},
	"SourceIP": {
		AllowedChoices: []string{},
		ConvertedName:  "SourceIP",
		Description:    `Source ip.`,
		Exposed:        true,
		Name:           "sourceIP",
		Type:           "string",
	},
	"SourcePort": {
		AllowedChoices: []string{},
		ConvertedName:  "SourcePort",
		Description:    `Source port.`,
		Exposed:        true,
		Name:           "sourcePort",
		Type:           "integer",
	},
	"ThreatCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatCategory",
		Description:    `Threat category.`,
		Exposed:        true,
		Name:           "threatCategory",
		Type:           "string",
	},
	"ThreatContentName": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentName",
		Description:    `Threat content name.`,
		Exposed:        true,
		Name:           "threatContentName",
		Type:           "string",
	},
	"ThreatContentver": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentver",
		Description:    `Contentver.`,
		Exposed:        true,
		Name:           "threatContentver",
		Type:           "string",
	},
	"ThreatDataFilterReason": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDataFilterReason",
		Description:    `Data filter reason.`,
		Exposed:        true,
		Name:           "threatDataFilterReason",
		Type:           "string",
	},
	"ThreatDirection": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDirection",
		Description:    `Traffic direction.`,
		Exposed:        true,
		Name:           "threatDirection",
		Type:           "string",
	},
	"ThreatFileType": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatFileType",
		Description:    `Filetype.`,
		Exposed:        true,
		Name:           "threatFileType",
		Type:           "string",
	},
	"ThreatSeverity": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSeverity",
		Description:    `Severity.`,
		Exposed:        true,
		Name:           "threatSeverity",
		Type:           "string",
	},
	"ThreatSubType": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSubType",
		Description:    `Sub type.`,
		Exposed:        true,
		Name:           "threatSubType",
		Type:           "string",
	},
	"TimeGenerated": {
		AllowedChoices: []string{},
		ConvertedName:  "TimeGenerated",
		Description:    `Time generated.`,
		Exposed:        true,
		Name:           "timeGenerated",
		Type:           "time",
	},
	"TrafficBytesReceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesReceived",
		Description:    `Bytes received.`,
		Exposed:        true,
		Name:           "trafficBytesReceived",
		Type:           "string",
	},
	"TrafficBytesSent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesSent",
		Description:    `Bytes sent.`,
		Exposed:        true,
		Name:           "trafficBytesSent",
		Type:           "string",
	},
	"TrafficCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficCategory",
		Description:    `Category.`,
		Exposed:        true,
		Name:           "trafficCategory",
		Type:           "string",
	},
	"TrafficDestinationCountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficDestinationCountry",
		Description:    `Traffic destination country.`,
		Exposed:        true,
		Name:           "trafficDestinationCountry",
		Type:           "string",
	},
	"TrafficElapsedTime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficElapsedTime",
		Description:    `Elapsed time.`,
		Exposed:        true,
		Name:           "trafficElapsedTime",
		Type:           "integer",
	},
	"TrafficPacketsReceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsReceived",
		Description:    `Bytes received.`,
		Exposed:        true,
		Name:           "trafficPacketsReceived",
		Type:           "string",
	},
	"TrafficPacketsSent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsSent",
		Description:    `Bytes received.`,
		Exposed:        true,
		Name:           "trafficPacketsSent",
		Type:           "string",
	},
	"TrafficSessionEndReason": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSessionEndReason",
		Description:    `Session end reason.`,
		Exposed:        true,
		Name:           "trafficSessionEndReason",
		Type:           "string",
	},
	"TrafficSourceCountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSourceCountry",
		Description:    `Traffic source country.`,
		Exposed:        true,
		Name:           "trafficSourceCountry",
		Type:           "string",
	},
	"TrafficStartTime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficStartTime",
		Description:    `Start time.`,
		Exposed:        true,
		Name:           "trafficStartTime",
		Type:           "time",
	},
	"Type": {
		AllowedChoices: []string{"Traffic", "Threat", "URLFiltering"},
		ConvertedName:  "Type",
		Description:    `Type of the log.`,
		Exposed:        true,
		Name:           "type",
		Type:           "enum",
	},
	"UrlFilteringCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringCategory",
		Description:    `Url filtering Category.`,
		Exposed:        true,
		Name:           "urlFilteringCategory",
		Type:           "string",
	},
	"UrlFilteringStartTime": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringStartTime",
		Description:    `Start time.`,
		Exposed:        true,
		Name:           "urlFilteringStartTime",
		Type:           "time",
	},
	"XffIP": {
		AllowedChoices: []string{},
		ConvertedName:  "XffIP",
		Description:    `Xff ip.`,
		Exposed:        true,
		Name:           "xffIP",
		Type:           "string",
	},
}

// FirewallLogLowerCaseAttributesMap represents the map of attribute for FirewallLog.
var FirewallLogLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"accountid": {
		AllowedChoices: []string{},
		ConvertedName:  "AccountID",
		Description:    `AWS account id that generated the log.`,
		Exposed:        true,
		Name:           "accountID",
		Type:           "string",
	},
	"action": {
		AllowedChoices: []string{},
		ConvertedName:  "Action",
		Description:    `Action the NGFW took.`,
		Exposed:        true,
		Name:           "action",
		Type:           "string",
	},
	"app": {
		AllowedChoices: []string{},
		ConvertedName:  "App",
		Description:    `Application.`,
		Exposed:        true,
		Name:           "app",
		Type:           "string",
	},
	"destinationip": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationIP",
		Description:    `Destination ip.`,
		Exposed:        true,
		Name:           "destinationIP",
		Type:           "string",
	},
	"destinationport": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationPort",
		Description:    `Destination port.`,
		Exposed:        true,
		Name:           "destinationPort",
		Type:           "integer",
	},
	"firewallname": {
		AllowedChoices: []string{},
		ConvertedName:  "FirewallName",
		Description:    `Name of firewall that generated the log.`,
		Exposed:        true,
		Name:           "firewallName",
		Type:           "string",
	},
	"protocol": {
		AllowedChoices: []string{},
		ConvertedName:  "Protocol",
		Description:    `Network protocol.`,
		Exposed:        true,
		Name:           "protocol",
		Type:           "string",
	},
	"region": {
		AllowedChoices: []string{},
		ConvertedName:  "Region",
		Description:    `AWS region that generated the log.`,
		Exposed:        true,
		Name:           "region",
		Type:           "string",
	},
	"repeatcount": {
		AllowedChoices: []string{},
		ConvertedName:  "RepeatCount",
		Description:    `Repeat count.`,
		Exposed:        true,
		Name:           "repeatCount",
		Type:           "integer",
	},
	"rule": {
		AllowedChoices: []string{},
		ConvertedName:  "Rule",
		Description:    `NGFW rule.`,
		Exposed:        true,
		Name:           "rule",
		Type:           "string",
	},
	"sessionid": {
		AllowedChoices: []string{},
		ConvertedName:  "SessionID",
		Description:    `Session id.`,
		Exposed:        true,
		Name:           "sessionID",
		Type:           "string",
	},
	"sourceip": {
		AllowedChoices: []string{},
		ConvertedName:  "SourceIP",
		Description:    `Source ip.`,
		Exposed:        true,
		Name:           "sourceIP",
		Type:           "string",
	},
	"sourceport": {
		AllowedChoices: []string{},
		ConvertedName:  "SourcePort",
		Description:    `Source port.`,
		Exposed:        true,
		Name:           "sourcePort",
		Type:           "integer",
	},
	"threatcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatCategory",
		Description:    `Threat category.`,
		Exposed:        true,
		Name:           "threatCategory",
		Type:           "string",
	},
	"threatcontentname": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentName",
		Description:    `Threat content name.`,
		Exposed:        true,
		Name:           "threatContentName",
		Type:           "string",
	},
	"threatcontentver": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentver",
		Description:    `Contentver.`,
		Exposed:        true,
		Name:           "threatContentver",
		Type:           "string",
	},
	"threatdatafilterreason": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDataFilterReason",
		Description:    `Data filter reason.`,
		Exposed:        true,
		Name:           "threatDataFilterReason",
		Type:           "string",
	},
	"threatdirection": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDirection",
		Description:    `Traffic direction.`,
		Exposed:        true,
		Name:           "threatDirection",
		Type:           "string",
	},
	"threatfiletype": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatFileType",
		Description:    `Filetype.`,
		Exposed:        true,
		Name:           "threatFileType",
		Type:           "string",
	},
	"threatseverity": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSeverity",
		Description:    `Severity.`,
		Exposed:        true,
		Name:           "threatSeverity",
		Type:           "string",
	},
	"threatsubtype": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSubType",
		Description:    `Sub type.`,
		Exposed:        true,
		Name:           "threatSubType",
		Type:           "string",
	},
	"timegenerated": {
		AllowedChoices: []string{},
		ConvertedName:  "TimeGenerated",
		Description:    `Time generated.`,
		Exposed:        true,
		Name:           "timeGenerated",
		Type:           "time",
	},
	"trafficbytesreceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesReceived",
		Description:    `Bytes received.`,
		Exposed:        true,
		Name:           "trafficBytesReceived",
		Type:           "string",
	},
	"trafficbytessent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesSent",
		Description:    `Bytes sent.`,
		Exposed:        true,
		Name:           "trafficBytesSent",
		Type:           "string",
	},
	"trafficcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficCategory",
		Description:    `Category.`,
		Exposed:        true,
		Name:           "trafficCategory",
		Type:           "string",
	},
	"trafficdestinationcountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficDestinationCountry",
		Description:    `Traffic destination country.`,
		Exposed:        true,
		Name:           "trafficDestinationCountry",
		Type:           "string",
	},
	"trafficelapsedtime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficElapsedTime",
		Description:    `Elapsed time.`,
		Exposed:        true,
		Name:           "trafficElapsedTime",
		Type:           "integer",
	},
	"trafficpacketsreceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsReceived",
		Description:    `Bytes received.`,
		Exposed:        true,
		Name:           "trafficPacketsReceived",
		Type:           "string",
	},
	"trafficpacketssent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsSent",
		Description:    `Bytes received.`,
		Exposed:        true,
		Name:           "trafficPacketsSent",
		Type:           "string",
	},
	"trafficsessionendreason": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSessionEndReason",
		Description:    `Session end reason.`,
		Exposed:        true,
		Name:           "trafficSessionEndReason",
		Type:           "string",
	},
	"trafficsourcecountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSourceCountry",
		Description:    `Traffic source country.`,
		Exposed:        true,
		Name:           "trafficSourceCountry",
		Type:           "string",
	},
	"trafficstarttime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficStartTime",
		Description:    `Start time.`,
		Exposed:        true,
		Name:           "trafficStartTime",
		Type:           "time",
	},
	"type": {
		AllowedChoices: []string{"Traffic", "Threat", "URLFiltering"},
		ConvertedName:  "Type",
		Description:    `Type of the log.`,
		Exposed:        true,
		Name:           "type",
		Type:           "enum",
	},
	"urlfilteringcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringCategory",
		Description:    `Url filtering Category.`,
		Exposed:        true,
		Name:           "urlFilteringCategory",
		Type:           "string",
	},
	"urlfilteringstarttime": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringStartTime",
		Description:    `Start time.`,
		Exposed:        true,
		Name:           "urlFilteringStartTime",
		Type:           "time",
	},
	"xffip": {
		AllowedChoices: []string{},
		ConvertedName:  "XffIP",
		Description:    `Xff ip.`,
		Exposed:        true,
		Name:           "xffIP",
		Type:           "string",
	},
}

type mongoAttributesFirewallLog struct {
}
