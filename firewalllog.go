// Code generated by elegen. DO NOT EDIT.
// Source: go.aporeto.io/elemental (templates/model.gotpl)

package api

import (
	"fmt"
	"time"

	"github.com/globalsign/mgo/bson"
	"github.com/mitchellh/copystructure"
	"go.aporeto.io/elemental"
)

// FirewallLogTypeValue represents the possible values for attribute "type".
type FirewallLogTypeValue string

const (
	// FirewallLogTypeThreat represents the value Threat.
	FirewallLogTypeThreat FirewallLogTypeValue = "Threat"

	// FirewallLogTypeTraffic represents the value Traffic.
	FirewallLogTypeTraffic FirewallLogTypeValue = "Traffic"

	// FirewallLogTypeURLFiltering represents the value URLFiltering.
	FirewallLogTypeURLFiltering FirewallLogTypeValue = "URLFiltering"
)

// FirewallLog represents the model of a firewalllog
type FirewallLog struct {
	// The IP address of the user who requested the web page or the IP address of the
	// next to last device that the request traversed. If the request goes through one
	// or more proxies, load balancers, or other upstream devices, the firewall
	// displays the IP address of the most recent device.
	XFFIP string `json:"XFFIP" msgpack:"XFFIP" bson:"-" mapstructure:"XFFIP,omitempty"`

	// AWS account ID that generated the log.
	AccountID string `json:"accountID" msgpack:"accountID" bson:"-" mapstructure:"accountID,omitempty"`

	// Action taken for the session.
	Action string `json:"action" msgpack:"action" bson:"-" mapstructure:"action,omitempty"`

	// Application associated with the session.
	App string `json:"app" msgpack:"app" bson:"-" mapstructure:"app,omitempty"`

	// Original destination source dynamic address group.
	DestinationDAG string `json:"destinationDAG" msgpack:"destinationDAG" bson:"-" mapstructure:"destinationDAG,omitempty"`

	// Original session destination IP address.
	DestinationIP string `json:"destinationIP" msgpack:"destinationIP" bson:"-" mapstructure:"destinationIP,omitempty"`

	// Destination port utilized by the session.
	DestinationPort int `json:"destinationPort" msgpack:"destinationPort" bson:"-" mapstructure:"destinationPort,omitempty"`

	// Name of firewall that generated the log.
	FirewallName string `json:"firewallName" msgpack:"firewallName" bson:"-" mapstructure:"firewallName,omitempty"`

	// IP protocol associated with the session.
	Protocol string `json:"protocol" msgpack:"protocol" bson:"-" mapstructure:"protocol,omitempty"`

	// AWS region that generated the log.
	Region string `json:"region" msgpack:"region" bson:"-" mapstructure:"region,omitempty"`

	// Number of sessions with same Source IP, Destination IP, Application, and Subtype
	// seen within 5 seconds.
	RepeatCount int `json:"repeatCount" msgpack:"repeatCount" bson:"-" mapstructure:"repeatCount,omitempty"`

	// Name of the rule that the session matched.
	Rule string `json:"rule" msgpack:"rule" bson:"-" mapstructure:"rule,omitempty"`

	// An internal numerical identifier applied to each session.
	SessionID string `json:"sessionID" msgpack:"sessionID" bson:"-" mapstructure:"sessionID,omitempty"`

	// Original session source dynamic address group.
	SourceDAG string `json:"sourceDAG" msgpack:"sourceDAG" bson:"-" mapstructure:"sourceDAG,omitempty"`

	// Original session source IP address.
	SourceIP string `json:"sourceIP" msgpack:"sourceIP" bson:"-" mapstructure:"sourceIP,omitempty"`

	// Source port utilized by the session.
	SourcePort int `json:"sourcePort" msgpack:"sourcePort" bson:"-" mapstructure:"sourcePort,omitempty"`

	// Describes threat categories used to classify different types of threat
	// signatures.
	ThreatCategory string `json:"threatCategory" msgpack:"threatCategory" bson:"-" mapstructure:"threatCategory,omitempty"`

	// Palo Alto Networks identifier for known and custom threats. It is a description
	// string followed by a 64-bit numerical identifier in parentheses for some
	// Subtypes.
	ThreatContentName string `json:"threatContentName" msgpack:"threatContentName" bson:"-" mapstructure:"threatContentName,omitempty"`

	// Applications and Threats version on your firewall when the log was generated.
	ThreatContentver string `json:"threatContentver" msgpack:"threatContentver" bson:"-" mapstructure:"threatContentver,omitempty"`

	// Reason for Data Filtering action.
	ThreatDataFilterReason string `json:"threatDataFilterReason" msgpack:"threatDataFilterReason" bson:"-" mapstructure:"threatDataFilterReason,omitempty"`

	// Indicates the direction of the attack, client-to-server or server-to-client.
	ThreatDirection string `json:"threatDirection" msgpack:"threatDirection" bson:"-" mapstructure:"threatDirection,omitempty"`

	// File type associated with the threat.
	ThreatFileType string `json:"threatFileType" msgpack:"threatFileType" bson:"-" mapstructure:"threatFileType,omitempty"`

	// Severity associated with the threat; values are informational, low, medium,
	// high, critical.
	ThreatSeverity string `json:"threatSeverity" msgpack:"threatSeverity" bson:"-" mapstructure:"threatSeverity,omitempty"`

	// Subtype of threat log.
	ThreatSubType string `json:"threatSubType" msgpack:"threatSubType" bson:"-" mapstructure:"threatSubType,omitempty"`

	// Time the log was generated on the dataplane.
	TimeGenerated time.Time `json:"timeGenerated" msgpack:"timeGenerated" bson:"-" mapstructure:"timeGenerated,omitempty"`

	// Number of bytes in the server-to-client direction of the session.
	TrafficBytesReceived string `json:"trafficBytesReceived" msgpack:"trafficBytesReceived" bson:"-" mapstructure:"trafficBytesReceived,omitempty"`

	// Number of bytes in the client-to-server direction of the session.
	TrafficBytesSent string `json:"trafficBytesSent" msgpack:"trafficBytesSent" bson:"-" mapstructure:"trafficBytesSent,omitempty"`

	// URL category associated with the session (if applicable).
	TrafficCategory string `json:"trafficCategory" msgpack:"trafficCategory" bson:"-" mapstructure:"trafficCategory,omitempty"`

	// Destination country or Internal region for private addresses. Maximum length is
	// 32 bytes.
	TrafficDestinationCountry string `json:"trafficDestinationCountry" msgpack:"trafficDestinationCountry" bson:"-" mapstructure:"trafficDestinationCountry,omitempty"`

	// Elapsed time of the session.
	TrafficElapsedTime int `json:"trafficElapsedTime" msgpack:"trafficElapsedTime" bson:"-" mapstructure:"trafficElapsedTime,omitempty"`

	// Number of server-to-client packets for the session.
	TrafficPacketsReceived string `json:"trafficPacketsReceived" msgpack:"trafficPacketsReceived" bson:"-" mapstructure:"trafficPacketsReceived,omitempty"`

	// Number of client-to-server packets for the session.
	TrafficPacketsSent string `json:"trafficPacketsSent" msgpack:"trafficPacketsSent" bson:"-" mapstructure:"trafficPacketsSent,omitempty"`

	// The reason a session terminated. If the termination had multiple causes, this
	// field displays only the highest priority reason.
	TrafficSessionEndReason string `json:"trafficSessionEndReason" msgpack:"trafficSessionEndReason" bson:"-" mapstructure:"trafficSessionEndReason,omitempty"`

	// Source country or Internal region for private addresses; maximum length is 32
	// bytes.
	TrafficSourceCountry string `json:"trafficSourceCountry" msgpack:"trafficSourceCountry" bson:"-" mapstructure:"trafficSourceCountry,omitempty"`

	// Time of session start.
	TrafficStartTime time.Time `json:"trafficStartTime" msgpack:"trafficStartTime" bson:"-" mapstructure:"trafficStartTime,omitempty"`

	// Type of the log.
	Type FirewallLogTypeValue `json:"type" msgpack:"type" bson:"-" mapstructure:"type,omitempty"`

	// URL category associated with the session (if applicable).
	UrlFilteringCategory string `json:"urlFilteringCategory" msgpack:"urlFilteringCategory" bson:"-" mapstructure:"urlFilteringCategory,omitempty"`

	// Time of session start.
	UrlFilteringStartTime time.Time `json:"urlFilteringStartTime" msgpack:"urlFilteringStartTime" bson:"-" mapstructure:"urlFilteringStartTime,omitempty"`

	ModelVersion int `json:"-" msgpack:"-" bson:"_modelversion"`
}

// NewFirewallLog returns a new *FirewallLog
func NewFirewallLog() *FirewallLog {

	return &FirewallLog{
		ModelVersion: 1,
	}
}

// GetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallLog) GetBSON() (any, error) {

	if o == nil {
		return nil, nil
	}

	s := &mongoAttributesFirewallLog{}

	return s, nil
}

// SetBSON implements the bson marshaling interface.
// This is used to transparently convert ID to MongoDBID as ObectID.
func (o *FirewallLog) SetBSON(raw bson.Raw) error {

	if o == nil {
		return nil
	}

	s := &mongoAttributesFirewallLog{}
	if err := raw.Unmarshal(s); err != nil {
		return err
	}

	return nil
}

// BleveType implements the bleve.Classifier Interface.
func (o *FirewallLog) BleveType() string {

	return "firewalllog"
}

// DeepCopy returns a deep copy if the FirewallLog.
func (o *FirewallLog) DeepCopy() *FirewallLog {

	if o == nil {
		return nil
	}

	out := &FirewallLog{}
	o.DeepCopyInto(out)

	return out
}

// DeepCopyInto copies the receiver into the given *FirewallLog.
func (o *FirewallLog) DeepCopyInto(out *FirewallLog) {

	target, err := copystructure.Copy(o)
	if err != nil {
		panic(fmt.Sprintf("Unable to deepcopy FirewallLog: %s", err))
	}

	*out = *target.(*FirewallLog)
}

// Validate valides the current information stored into the structure.
func (o *FirewallLog) Validate() error {

	errors := elemental.Errors{}
	requiredErrors := elemental.Errors{}

	if err := elemental.ValidateStringInList("type", string(o.Type), []string{"Traffic", "Threat", "URLFiltering"}, false); err != nil {
		errors = errors.Append(err)
	}

	if len(requiredErrors) > 0 {
		return requiredErrors
	}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (*FirewallLog) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	if v, ok := FirewallLogAttributesMap[name]; ok {
		return v
	}

	// We could not find it, so let's check on the lower case indexed spec map
	return FirewallLogLowerCaseAttributesMap[name]
}

// AttributeSpecifications returns the full attribute specifications map.
func (*FirewallLog) AttributeSpecifications() map[string]elemental.AttributeSpecification {

	return FirewallLogAttributesMap
}

// ValueForAttribute returns the value for the given attribute.
// This is a very advanced function that you should not need but in some
// very specific use cases.
func (o *FirewallLog) ValueForAttribute(name string) any {

	switch name {
	case "XFFIP":
		return o.XFFIP
	case "accountID":
		return o.AccountID
	case "action":
		return o.Action
	case "app":
		return o.App
	case "destinationDAG":
		return o.DestinationDAG
	case "destinationIP":
		return o.DestinationIP
	case "destinationPort":
		return o.DestinationPort
	case "firewallName":
		return o.FirewallName
	case "protocol":
		return o.Protocol
	case "region":
		return o.Region
	case "repeatCount":
		return o.RepeatCount
	case "rule":
		return o.Rule
	case "sessionID":
		return o.SessionID
	case "sourceDAG":
		return o.SourceDAG
	case "sourceIP":
		return o.SourceIP
	case "sourcePort":
		return o.SourcePort
	case "threatCategory":
		return o.ThreatCategory
	case "threatContentName":
		return o.ThreatContentName
	case "threatContentver":
		return o.ThreatContentver
	case "threatDataFilterReason":
		return o.ThreatDataFilterReason
	case "threatDirection":
		return o.ThreatDirection
	case "threatFileType":
		return o.ThreatFileType
	case "threatSeverity":
		return o.ThreatSeverity
	case "threatSubType":
		return o.ThreatSubType
	case "timeGenerated":
		return o.TimeGenerated
	case "trafficBytesReceived":
		return o.TrafficBytesReceived
	case "trafficBytesSent":
		return o.TrafficBytesSent
	case "trafficCategory":
		return o.TrafficCategory
	case "trafficDestinationCountry":
		return o.TrafficDestinationCountry
	case "trafficElapsedTime":
		return o.TrafficElapsedTime
	case "trafficPacketsReceived":
		return o.TrafficPacketsReceived
	case "trafficPacketsSent":
		return o.TrafficPacketsSent
	case "trafficSessionEndReason":
		return o.TrafficSessionEndReason
	case "trafficSourceCountry":
		return o.TrafficSourceCountry
	case "trafficStartTime":
		return o.TrafficStartTime
	case "type":
		return o.Type
	case "urlFilteringCategory":
		return o.UrlFilteringCategory
	case "urlFilteringStartTime":
		return o.UrlFilteringStartTime
	}

	return nil
}

// FirewallLogAttributesMap represents the map of attribute for FirewallLog.
var FirewallLogAttributesMap = map[string]elemental.AttributeSpecification{
	"XFFIP": {
		AllowedChoices: []string{},
		ConvertedName:  "XFFIP",
		Description: `The IP address of the user who requested the web page or the IP address of the
next to last device that the request traversed. If the request goes through one
or more proxies, load balancers, or other upstream devices, the firewall
displays the IP address of the most recent device.`,
		Exposed:  true,
		Name:     "XFFIP",
		ReadOnly: true,
		Type:     "string",
	},
	"AccountID": {
		AllowedChoices: []string{},
		ConvertedName:  "AccountID",
		Description:    `AWS account ID that generated the log.`,
		Exposed:        true,
		Name:           "accountID",
		ReadOnly:       true,
		Type:           "string",
	},
	"Action": {
		AllowedChoices: []string{},
		ConvertedName:  "Action",
		Description:    `Action taken for the session.`,
		Exposed:        true,
		Name:           "action",
		ReadOnly:       true,
		Type:           "string",
	},
	"App": {
		AllowedChoices: []string{},
		ConvertedName:  "App",
		Description:    `Application associated with the session.`,
		Exposed:        true,
		Name:           "app",
		ReadOnly:       true,
		Type:           "string",
	},
	"DestinationDAG": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationDAG",
		Description:    `Original destination source dynamic address group.`,
		Exposed:        true,
		Name:           "destinationDAG",
		ReadOnly:       true,
		Type:           "string",
	},
	"DestinationIP": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationIP",
		Description:    `Original session destination IP address.`,
		Exposed:        true,
		Name:           "destinationIP",
		ReadOnly:       true,
		Type:           "string",
	},
	"DestinationPort": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationPort",
		Description:    `Destination port utilized by the session.`,
		Exposed:        true,
		Name:           "destinationPort",
		ReadOnly:       true,
		Type:           "integer",
	},
	"FirewallName": {
		AllowedChoices: []string{},
		ConvertedName:  "FirewallName",
		Description:    `Name of firewall that generated the log.`,
		Exposed:        true,
		Name:           "firewallName",
		ReadOnly:       true,
		Type:           "string",
	},
	"Protocol": {
		AllowedChoices: []string{},
		ConvertedName:  "Protocol",
		Description:    `IP protocol associated with the session.`,
		Exposed:        true,
		Name:           "protocol",
		ReadOnly:       true,
		Type:           "string",
	},
	"Region": {
		AllowedChoices: []string{},
		ConvertedName:  "Region",
		Description:    `AWS region that generated the log.`,
		Exposed:        true,
		Name:           "region",
		ReadOnly:       true,
		Type:           "string",
	},
	"RepeatCount": {
		AllowedChoices: []string{},
		ConvertedName:  "RepeatCount",
		Description: `Number of sessions with same Source IP, Destination IP, Application, and Subtype
seen within 5 seconds.`,
		Exposed:  true,
		Name:     "repeatCount",
		ReadOnly: true,
		Type:     "integer",
	},
	"Rule": {
		AllowedChoices: []string{},
		ConvertedName:  "Rule",
		Description:    `Name of the rule that the session matched.`,
		Exposed:        true,
		Name:           "rule",
		ReadOnly:       true,
		Type:           "string",
	},
	"SessionID": {
		AllowedChoices: []string{},
		ConvertedName:  "SessionID",
		Description:    `An internal numerical identifier applied to each session.`,
		Exposed:        true,
		Name:           "sessionID",
		ReadOnly:       true,
		Type:           "string",
	},
	"SourceDAG": {
		AllowedChoices: []string{},
		ConvertedName:  "SourceDAG",
		Description:    `Original session source dynamic address group.`,
		Exposed:        true,
		Name:           "sourceDAG",
		ReadOnly:       true,
		Type:           "string",
	},
	"SourceIP": {
		AllowedChoices: []string{},
		ConvertedName:  "SourceIP",
		Description:    `Original session source IP address.`,
		Exposed:        true,
		Name:           "sourceIP",
		ReadOnly:       true,
		Type:           "string",
	},
	"SourcePort": {
		AllowedChoices: []string{},
		ConvertedName:  "SourcePort",
		Description:    `Source port utilized by the session.`,
		Exposed:        true,
		Name:           "sourcePort",
		ReadOnly:       true,
		Type:           "integer",
	},
	"ThreatCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatCategory",
		Description: `Describes threat categories used to classify different types of threat
signatures.`,
		Exposed:  true,
		Name:     "threatCategory",
		ReadOnly: true,
		Type:     "string",
	},
	"ThreatContentName": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentName",
		Description: `Palo Alto Networks identifier for known and custom threats. It is a description
string followed by a 64-bit numerical identifier in parentheses for some
Subtypes.`,
		Exposed:  true,
		Name:     "threatContentName",
		ReadOnly: true,
		Type:     "string",
	},
	"ThreatContentver": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentver",
		Description:    `Applications and Threats version on your firewall when the log was generated.`,
		Exposed:        true,
		Name:           "threatContentver",
		ReadOnly:       true,
		Type:           "string",
	},
	"ThreatDataFilterReason": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDataFilterReason",
		Description:    `Reason for Data Filtering action.`,
		Exposed:        true,
		Name:           "threatDataFilterReason",
		ReadOnly:       true,
		Type:           "string",
	},
	"ThreatDirection": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDirection",
		Description:    `Indicates the direction of the attack, client-to-server or server-to-client.`,
		Exposed:        true,
		Name:           "threatDirection",
		ReadOnly:       true,
		Type:           "string",
	},
	"ThreatFileType": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatFileType",
		Description:    `File type associated with the threat.`,
		Exposed:        true,
		Name:           "threatFileType",
		ReadOnly:       true,
		Type:           "string",
	},
	"ThreatSeverity": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSeverity",
		Description: `Severity associated with the threat; values are informational, low, medium,
high, critical.`,
		Exposed:  true,
		Name:     "threatSeverity",
		ReadOnly: true,
		Type:     "string",
	},
	"ThreatSubType": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSubType",
		Description:    `Subtype of threat log.`,
		Exposed:        true,
		Name:           "threatSubType",
		ReadOnly:       true,
		Type:           "string",
	},
	"TimeGenerated": {
		AllowedChoices: []string{},
		ConvertedName:  "TimeGenerated",
		Description:    `Time the log was generated on the dataplane.`,
		Exposed:        true,
		Name:           "timeGenerated",
		ReadOnly:       true,
		Type:           "time",
	},
	"TrafficBytesReceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesReceived",
		Description:    `Number of bytes in the server-to-client direction of the session.`,
		Exposed:        true,
		Name:           "trafficBytesReceived",
		ReadOnly:       true,
		Type:           "string",
	},
	"TrafficBytesSent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesSent",
		Description:    `Number of bytes in the client-to-server direction of the session.`,
		Exposed:        true,
		Name:           "trafficBytesSent",
		ReadOnly:       true,
		Type:           "string",
	},
	"TrafficCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficCategory",
		Description:    `URL category associated with the session (if applicable).`,
		Exposed:        true,
		Name:           "trafficCategory",
		ReadOnly:       true,
		Type:           "string",
	},
	"TrafficDestinationCountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficDestinationCountry",
		Description: `Destination country or Internal region for private addresses. Maximum length is
32 bytes.`,
		Exposed:  true,
		Name:     "trafficDestinationCountry",
		ReadOnly: true,
		Type:     "string",
	},
	"TrafficElapsedTime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficElapsedTime",
		Description:    `Elapsed time of the session.`,
		Exposed:        true,
		Name:           "trafficElapsedTime",
		ReadOnly:       true,
		Type:           "integer",
	},
	"TrafficPacketsReceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsReceived",
		Description:    `Number of server-to-client packets for the session.`,
		Exposed:        true,
		Name:           "trafficPacketsReceived",
		ReadOnly:       true,
		Type:           "string",
	},
	"TrafficPacketsSent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsSent",
		Description:    `Number of client-to-server packets for the session.`,
		Exposed:        true,
		Name:           "trafficPacketsSent",
		ReadOnly:       true,
		Type:           "string",
	},
	"TrafficSessionEndReason": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSessionEndReason",
		Description: `The reason a session terminated. If the termination had multiple causes, this
field displays only the highest priority reason.`,
		Exposed:  true,
		Name:     "trafficSessionEndReason",
		ReadOnly: true,
		Type:     "string",
	},
	"TrafficSourceCountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSourceCountry",
		Description: `Source country or Internal region for private addresses; maximum length is 32
bytes.`,
		Exposed:  true,
		Name:     "trafficSourceCountry",
		ReadOnly: true,
		Type:     "string",
	},
	"TrafficStartTime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficStartTime",
		Description:    `Time of session start.`,
		Exposed:        true,
		Name:           "trafficStartTime",
		ReadOnly:       true,
		Type:           "time",
	},
	"Type": {
		AllowedChoices: []string{"Traffic", "Threat", "URLFiltering"},
		ConvertedName:  "Type",
		Description:    `Type of the log.`,
		Exposed:        true,
		Name:           "type",
		ReadOnly:       true,
		Type:           "enum",
	},
	"UrlFilteringCategory": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringCategory",
		Description:    `URL category associated with the session (if applicable).`,
		Exposed:        true,
		Name:           "urlFilteringCategory",
		ReadOnly:       true,
		Type:           "string",
	},
	"UrlFilteringStartTime": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringStartTime",
		Description:    `Time of session start.`,
		Exposed:        true,
		Name:           "urlFilteringStartTime",
		ReadOnly:       true,
		Type:           "time",
	},
}

// FirewallLogLowerCaseAttributesMap represents the map of attribute for FirewallLog.
var FirewallLogLowerCaseAttributesMap = map[string]elemental.AttributeSpecification{
	"xffip": {
		AllowedChoices: []string{},
		ConvertedName:  "XFFIP",
		Description: `The IP address of the user who requested the web page or the IP address of the
next to last device that the request traversed. If the request goes through one
or more proxies, load balancers, or other upstream devices, the firewall
displays the IP address of the most recent device.`,
		Exposed:  true,
		Name:     "XFFIP",
		ReadOnly: true,
		Type:     "string",
	},
	"accountid": {
		AllowedChoices: []string{},
		ConvertedName:  "AccountID",
		Description:    `AWS account ID that generated the log.`,
		Exposed:        true,
		Name:           "accountID",
		ReadOnly:       true,
		Type:           "string",
	},
	"action": {
		AllowedChoices: []string{},
		ConvertedName:  "Action",
		Description:    `Action taken for the session.`,
		Exposed:        true,
		Name:           "action",
		ReadOnly:       true,
		Type:           "string",
	},
	"app": {
		AllowedChoices: []string{},
		ConvertedName:  "App",
		Description:    `Application associated with the session.`,
		Exposed:        true,
		Name:           "app",
		ReadOnly:       true,
		Type:           "string",
	},
	"destinationdag": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationDAG",
		Description:    `Original destination source dynamic address group.`,
		Exposed:        true,
		Name:           "destinationDAG",
		ReadOnly:       true,
		Type:           "string",
	},
	"destinationip": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationIP",
		Description:    `Original session destination IP address.`,
		Exposed:        true,
		Name:           "destinationIP",
		ReadOnly:       true,
		Type:           "string",
	},
	"destinationport": {
		AllowedChoices: []string{},
		ConvertedName:  "DestinationPort",
		Description:    `Destination port utilized by the session.`,
		Exposed:        true,
		Name:           "destinationPort",
		ReadOnly:       true,
		Type:           "integer",
	},
	"firewallname": {
		AllowedChoices: []string{},
		ConvertedName:  "FirewallName",
		Description:    `Name of firewall that generated the log.`,
		Exposed:        true,
		Name:           "firewallName",
		ReadOnly:       true,
		Type:           "string",
	},
	"protocol": {
		AllowedChoices: []string{},
		ConvertedName:  "Protocol",
		Description:    `IP protocol associated with the session.`,
		Exposed:        true,
		Name:           "protocol",
		ReadOnly:       true,
		Type:           "string",
	},
	"region": {
		AllowedChoices: []string{},
		ConvertedName:  "Region",
		Description:    `AWS region that generated the log.`,
		Exposed:        true,
		Name:           "region",
		ReadOnly:       true,
		Type:           "string",
	},
	"repeatcount": {
		AllowedChoices: []string{},
		ConvertedName:  "RepeatCount",
		Description: `Number of sessions with same Source IP, Destination IP, Application, and Subtype
seen within 5 seconds.`,
		Exposed:  true,
		Name:     "repeatCount",
		ReadOnly: true,
		Type:     "integer",
	},
	"rule": {
		AllowedChoices: []string{},
		ConvertedName:  "Rule",
		Description:    `Name of the rule that the session matched.`,
		Exposed:        true,
		Name:           "rule",
		ReadOnly:       true,
		Type:           "string",
	},
	"sessionid": {
		AllowedChoices: []string{},
		ConvertedName:  "SessionID",
		Description:    `An internal numerical identifier applied to each session.`,
		Exposed:        true,
		Name:           "sessionID",
		ReadOnly:       true,
		Type:           "string",
	},
	"sourcedag": {
		AllowedChoices: []string{},
		ConvertedName:  "SourceDAG",
		Description:    `Original session source dynamic address group.`,
		Exposed:        true,
		Name:           "sourceDAG",
		ReadOnly:       true,
		Type:           "string",
	},
	"sourceip": {
		AllowedChoices: []string{},
		ConvertedName:  "SourceIP",
		Description:    `Original session source IP address.`,
		Exposed:        true,
		Name:           "sourceIP",
		ReadOnly:       true,
		Type:           "string",
	},
	"sourceport": {
		AllowedChoices: []string{},
		ConvertedName:  "SourcePort",
		Description:    `Source port utilized by the session.`,
		Exposed:        true,
		Name:           "sourcePort",
		ReadOnly:       true,
		Type:           "integer",
	},
	"threatcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatCategory",
		Description: `Describes threat categories used to classify different types of threat
signatures.`,
		Exposed:  true,
		Name:     "threatCategory",
		ReadOnly: true,
		Type:     "string",
	},
	"threatcontentname": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentName",
		Description: `Palo Alto Networks identifier for known and custom threats. It is a description
string followed by a 64-bit numerical identifier in parentheses for some
Subtypes.`,
		Exposed:  true,
		Name:     "threatContentName",
		ReadOnly: true,
		Type:     "string",
	},
	"threatcontentver": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatContentver",
		Description:    `Applications and Threats version on your firewall when the log was generated.`,
		Exposed:        true,
		Name:           "threatContentver",
		ReadOnly:       true,
		Type:           "string",
	},
	"threatdatafilterreason": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDataFilterReason",
		Description:    `Reason for Data Filtering action.`,
		Exposed:        true,
		Name:           "threatDataFilterReason",
		ReadOnly:       true,
		Type:           "string",
	},
	"threatdirection": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatDirection",
		Description:    `Indicates the direction of the attack, client-to-server or server-to-client.`,
		Exposed:        true,
		Name:           "threatDirection",
		ReadOnly:       true,
		Type:           "string",
	},
	"threatfiletype": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatFileType",
		Description:    `File type associated with the threat.`,
		Exposed:        true,
		Name:           "threatFileType",
		ReadOnly:       true,
		Type:           "string",
	},
	"threatseverity": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSeverity",
		Description: `Severity associated with the threat; values are informational, low, medium,
high, critical.`,
		Exposed:  true,
		Name:     "threatSeverity",
		ReadOnly: true,
		Type:     "string",
	},
	"threatsubtype": {
		AllowedChoices: []string{},
		ConvertedName:  "ThreatSubType",
		Description:    `Subtype of threat log.`,
		Exposed:        true,
		Name:           "threatSubType",
		ReadOnly:       true,
		Type:           "string",
	},
	"timegenerated": {
		AllowedChoices: []string{},
		ConvertedName:  "TimeGenerated",
		Description:    `Time the log was generated on the dataplane.`,
		Exposed:        true,
		Name:           "timeGenerated",
		ReadOnly:       true,
		Type:           "time",
	},
	"trafficbytesreceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesReceived",
		Description:    `Number of bytes in the server-to-client direction of the session.`,
		Exposed:        true,
		Name:           "trafficBytesReceived",
		ReadOnly:       true,
		Type:           "string",
	},
	"trafficbytessent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficBytesSent",
		Description:    `Number of bytes in the client-to-server direction of the session.`,
		Exposed:        true,
		Name:           "trafficBytesSent",
		ReadOnly:       true,
		Type:           "string",
	},
	"trafficcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficCategory",
		Description:    `URL category associated with the session (if applicable).`,
		Exposed:        true,
		Name:           "trafficCategory",
		ReadOnly:       true,
		Type:           "string",
	},
	"trafficdestinationcountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficDestinationCountry",
		Description: `Destination country or Internal region for private addresses. Maximum length is
32 bytes.`,
		Exposed:  true,
		Name:     "trafficDestinationCountry",
		ReadOnly: true,
		Type:     "string",
	},
	"trafficelapsedtime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficElapsedTime",
		Description:    `Elapsed time of the session.`,
		Exposed:        true,
		Name:           "trafficElapsedTime",
		ReadOnly:       true,
		Type:           "integer",
	},
	"trafficpacketsreceived": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsReceived",
		Description:    `Number of server-to-client packets for the session.`,
		Exposed:        true,
		Name:           "trafficPacketsReceived",
		ReadOnly:       true,
		Type:           "string",
	},
	"trafficpacketssent": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficPacketsSent",
		Description:    `Number of client-to-server packets for the session.`,
		Exposed:        true,
		Name:           "trafficPacketsSent",
		ReadOnly:       true,
		Type:           "string",
	},
	"trafficsessionendreason": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSessionEndReason",
		Description: `The reason a session terminated. If the termination had multiple causes, this
field displays only the highest priority reason.`,
		Exposed:  true,
		Name:     "trafficSessionEndReason",
		ReadOnly: true,
		Type:     "string",
	},
	"trafficsourcecountry": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficSourceCountry",
		Description: `Source country or Internal region for private addresses; maximum length is 32
bytes.`,
		Exposed:  true,
		Name:     "trafficSourceCountry",
		ReadOnly: true,
		Type:     "string",
	},
	"trafficstarttime": {
		AllowedChoices: []string{},
		ConvertedName:  "TrafficStartTime",
		Description:    `Time of session start.`,
		Exposed:        true,
		Name:           "trafficStartTime",
		ReadOnly:       true,
		Type:           "time",
	},
	"type": {
		AllowedChoices: []string{"Traffic", "Threat", "URLFiltering"},
		ConvertedName:  "Type",
		Description:    `Type of the log.`,
		Exposed:        true,
		Name:           "type",
		ReadOnly:       true,
		Type:           "enum",
	},
	"urlfilteringcategory": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringCategory",
		Description:    `URL category associated with the session (if applicable).`,
		Exposed:        true,
		Name:           "urlFilteringCategory",
		ReadOnly:       true,
		Type:           "string",
	},
	"urlfilteringstarttime": {
		AllowedChoices: []string{},
		ConvertedName:  "UrlFilteringStartTime",
		Description:    `Time of session start.`,
		Exposed:        true,
		Name:           "urlFilteringStartTime",
		ReadOnly:       true,
		Type:           "time",
	},
}

type mongoAttributesFirewallLog struct {
}
